let map = fn(arr, f) { 
    let iter = fn(arr, accumulated) { 
        if (len(arr) == 0) { 
            accumulated 
        } else { 
            iter(rest(arr), push(accumulated, f(first(arr)))); 
        } 
    }; 

    iter(arr, []); 
};

let a = [1, 2, 3, 4];

let double = fn(x) { x + 2 };

map(a, double);

let reduce = fn(arr, initial, f) { 
    let iter = fn (arr, result) { 
        if (len(arr) == 0 ) { 
            result 
        } else { 
            iter(rest(arr), f(result, first(arr))); 
        }
    } 
    iter(arr, initial); 
}

let sum = fn(arr) { 
    reduce(arr, 0, fn(initial, el){initial + el}); 
}
sum([1, 2, 3, 4, 5]);


let loop = fn(count, f) {
    if (count > 0) {
        f();
        loop(count-1, f);
    }
}

loop(5, fn() {printf("hello\n")});